# 基于官方模板制作
# 官方文档
# https://immich.app
# https://github.com/immich-app/immich
# 官方compose教程
# https://immich.app/docs/install/docker-compose
# 官方变量说明
# https://immich.app/docs/install/environment-variables
# 官方clip说明
# https://immich.app/docs/features/command-line-interface
# 官方硬件转码说明
# https://immich.app/docs/features/hardware-transcoding
# 部署教程
# https://wiki.slarker.me/unraid/deploy_immich.html
# AI模型替换教程
# https://wiki.slarker.me/unraid/immich_ai_model.html
# https://www.bilibili.com/read/cv33865669
# AI模型列表，推荐 XLM-Roberta-Large-Vit-B-16Plus
# 人脸识别Facial Recognition用的模型是：buffalo_l，压缩包内还加入了antelopev2，据说效果更好
# https://huggingface.co/immich-app
# AI模型，国内源分流
# https://www.123pan.com/s/WXqA-EGL6d.html
# https://www.123pan.com/s/YuAUVv-Qp1nA.html 提取码:fgee

# 指定数据库，注意tag，截至2024-05-13前，官方支持版本tag为 pg16-v0.2.0
# https://hub.docker.com/r/tensorchord/pgvecto-rs

# 如果官方的镜像不好拉取，可以选择拉取以下两个镜像
# https://hub.docker.com/r/altran1502/immich-server
# https://hub.docker.com/r/altran1502/immich-machine-learning

# 该版本和内置版的区别只是在于各个镜像均可分别单独一个compose部署，反正最后还是要用的
# 但是redis和pgvecto-rs这两个数据库均可被别的容器调用，进而减少部署太多容器
# 同时immich-machine-learning，可以被另一台nas的immich-server所调用

---
version: "3.8"
# 最后编辑时间：2024-08-10
# 官方新的模板删除了immich-microservices该容器的部署
services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:release
    # 镜像地址
    container_name: immich-server
    # 容器名字
    hostname: immich-server
    # 主机名
    privileged: true
    # 特权模式，赋予容器几乎与主机相同的权限
    volumes:
      - 【这里替换为你的照片上传存放目录】:/usr/src/app/upload
      # 上传目录
      - /share:/share
      # 外部库目录，此文件夹将定期扫描，内容将自动导入immich，需要在immich上进行设置，容器路径可以自定义多个，理解映射就会明白了，默认为/usr/src/app/external
      # - 【这里替换为你的本地相册存放目录】:/【这里替换为你的本地相册存放目录的名字】
      # 自定义外部库目录，可以写多个，容器路径可随便自定义
    environment:
      - IMMICH_PORT=2283
      # 自定义容器端口，默认为3001，这里预设为2283
      # 2024-06-11，v1.106.3版本开始，这里的变量由SERVER_PORT改为IMMICH_PORT
      - REDIS_URL=【IP地址】
      - REDIS_PORT=6379
      # 指定要连接的redis的ip和端口，替换为redis的ip地址及对应的端口，如果部署在别的设备上，写上那个设备的IP，以及映射出来的端口，默认为6379
      - DB_URL=【IP地址】
      - DB_PORT=5432
      - DB_DATABASE_NAME=immich
      - DB_USERNAME=postgresql
      - DB_PASSWORD=postgresql
      # 指定要连接的postgres的ip和端口，替换为pgsql的ip地址及对应的端口，如果部署在别的设备上，写上那个设备的IP以及映射出来的端口，默认为5432
      # pgsql的子数据库，预设为immich，账号密码均为预设的postgresql(默认账号密码)
      - TZ=Asia/Shanghai
      # 时区、
    # network_mode: bridge
    network_mode: host
    # host模式需要容器内的端口不被占用，不需要端口映射，后续端口映射全都开头加#注释掉，否则注释掉这条
    # ports:
      # - 2283:2283/tcp
      # WebUI 端口
    restart: unless-stopped
    # 重启策略，可根据实际情况而选择 no/always/unless-stopped/on-failure/on-failure:3

############################################################################
# 可以单独部署，部署后被调用即可

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:release
    # 镜像地址
    container_name: immich-machine-learning
    # 容器名字
    hostname: immich-machine-learning
    # 主机名
    privileged: true
    # 特权模式，赋予容器几乎与主机相同的权限
    volumes:
      - /share/Container/immich/immich-machine-learning:/cache
      # clip与人脸识别模型的目录
      # 请将XLM-Roberta-Large-Vit-B-16Plus.zip解压缩后的XLM-Roberta-Large-Vit-B-16Plus文件夹放到/cache/clip内
      # 目录结构：/xxx/immich/immich-machine-learning/clip/XLM-Roberta-Large-Vit-B-16Plus
      # 
    environment:
      - TZ=Asia/Shanghai
      # 时区
      - MACHINE_LEARNING_PORT=3002
      # 自定义机器学习的容器端口，默认为3002，一般情况下不建议修改，除非你懂
      # 
      ####################
      #
      # 以下均为默认不需要修改，除非有特殊需要
      # - MACHINE_LEARNING_REQUEST_THREADS=0
      # cpu核心数，根据实际情况填写，默认0为禁用
      # - MACHINE_LEARNING_MODEL_INTER_OP_THREADS=1
      # 同时处理的文件数量，默认为1
      # - MACHINE_LEARNING_MODEL_INTRA_OP_THREADS=2
      # AI深度学习的线程数，默认为2
      # - MACHINE_LEARNING_WORKERS=1
      # AI深度学习的步数，默认为1
      # - MACHINE_LEARNING_WORKER_TIMEOUT=120
      # AI深度学习的超时时间，默认为120
      #
      ####################
    # network_mode: bridge
    network_mode: host
    # host模式需要容器内的端口不被占用，不需要端口映射，后续端口映射全都开头加#注释掉，否则注释掉这条
    # ports:
      # - 3002:3002/tcp
      # 访问端口，无WebUI
    restart: unless-stopped
    # 重启策略，可根据实际情况而选择 no/always/unless-stopped/on-failure/on-failure:3

############################################################################
# 可以单独部署，部署后被调用即可

  immich-redis:
    image: redis:latest
    # 镜像地址
    container_name: redis
    # 容器名字
    hostname: redis
    # 主机名
    volumes:
      - /share/Container/redis:/data
      # 数据库目录
    # network_mode: bridge
    network_mode: host
    # host模式需要容器内的端口不被占用，不需要端口映射，后续端口映射全都开头加#注释掉，否则注释掉这条
    # ports:
      # - 6379:6379/tcp
      # 访问端口，无WebUI
    restart: unless-stopped
    # 重启策略，可根据实际情况而选择 no/always/unless-stopped/on-failure/on-failure:3

############################################################################
# 可以单独部署，部署后被调用即可

  pgvecto-rs:
    image: tensorchord/pgvecto-rs:pg16-v0.2.0
    # 镜像地址
    container_name: pgvecto-rs
    # 容器名字
    hostname: pgvecto-rs
    # 主机名
    volumes:
      - /share/Container/pgvecto-rs:/var/lib/postgresql/data
      # 数据库目录
    environment:
      - POSTGRES_DB=immich
      - POSTGRES_USER=postgresql
      - POSTGRES_PASSWORD=postgresql
      # pgsql的子数据库，预设为immich，账号密码均为预设的postgresql(默认账号密码)
      - TZ=Asia/Shanghai
      # 时区
    # network_mode: bridge
    network_mode: host
    # host模式需要容器内的端口不被占用，不需要端口映射，后续端口映射全都开头加#注释掉，否则注释掉这条
    # ports:
      # - 5432:5432/tcp
      # 访问端口，无WebUI
    restart: unless-stopped
    # 重启策略，可根据实际情况而选择 no/always/unless-stopped/on-failure/on-failure:3

############################################################################