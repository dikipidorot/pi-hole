# 原作者不再维护NASTOOL，因为被派派助手（也叫群晖助手）的作者破解了，这是接盘后的镜像，也是破解了的，支持BT，不需要认证

# NASTOOL开启公开站点：在 config.yaml 的 laboratory 添加 show_more_sites: true

# 某个项目公开的tmdb api
# 22f10ca52f109158ac7fe064ebbcf697

# NAStool 电影命名设置 (自用)
# {title} ({year}) [(tmdb={tmdbid})]/{title}.{en_title}.{part}.{year}.{edition}.{videoFormat}.{videocdoe}.{audiocdoe}
# NAStool 节目命名设置 (自用)
# {title} ({year})/Season {season}/{title}.{en_title}.{part}.{year}.{season_episode}.{edition}.{videoFormat}.{videocdoe}.{audiocdoe}.{audiocdoe}

# 所有安装在 Docker 中的下载器，必须使用 host 网络驱动程序。PBH 需要下载器能获得 Peer 的真实 IP，不能使用 bridge 桥接模式！

##############################################
# 如果docker网络拉取失败，可以给镜像地址加上加速源，使用文本批量替换即可将下方中括号的内容批量替换掉
# [images: ] → [images: k-docker.asia/]，注意"images: "是带空格
##############################################
# 自动化媒体库的工作流程
# NT负责订阅搜刮PT站内的资源，将种子以及下载路径(容器的路径)，发送给QB/TR进行下载
# 当NT检测下载完毕后，将会根据整理刮削命名规则进行处理，转移到媒体库目录中
# 这样一来，PEJ检测到本地有新的媒体入库，并且本地已经存在刮削数据可以读取，即完成入库
# iyuu是用于辅助做种的；v2raya是用于解决网络不顺畅的问题，可以不搞；cookiecloud用于定期把电脑浏览器的PT站cookie同步到NT上
# jackett和prowlarr为索引器，只用jackett即可，此外prowlarr还是搜刮器，建议用来批量搜刮下载动漫BT
# QB适合下种，TR适合做种
# aria2是一个通用下载器，不推荐用来下载PT，不推荐用来下载PT，不推荐用来下载PT，后果自负

##############################################
# 重要内容，硬链接只能够存在于同一个存储池上
# 重要内容，硬链接只能够存在于同一个存储池上
# 重要内容，硬链接只能够存在于同一个存储池上

# /volume1/media
#          |---/动漫
#          |---/下载
#          |
#          |---/电影
#          |     |---/国产电影
#          |     |---/欧美电影
#          |     |---/日韩电影
#          |
#          |---/电视剧
#                 |---/国产电视剧
#                 |---/欧美电视剧
#                 |---/日韩电视剧

# ①：/volume1/media——————media为共享文件夹，存储池预设为第1个存储池，请根据自己实际情况修改【这是实际路径】
# ②：/volume1/media/下载——————用于QB和TR下载，MP中设置对应的容器路径/downloads用于传递【这是实际路径】
# ③：/volume1/media/电影；/volume1/media/电视剧——————用于媒体库的分类存放，可根据自己需要增添【这是实际路径】
# ④：NT和QB,TR都使用同一条路径映射“/meida/下载”【必须完全一样】
# ⑤：NT默认开启二级分类策略
# ⑥：NT的【下载器转移】和【文件目录同步】只能二选一开启

##############################################
# 注意事项
# 本模板包含PLEX,EMBY,JF,QB,TR,NT,COOKIECLOUD,PEERBANHELPER,JACKETT,PROWLARR,IYUU,V2RAYA,WATCHTOWER,ARIA2
# 如果设置了使用网络代理(不一定是v2raya，可以是软路由)，请提前启用并激活好魔法，否则EMBY,JF,NT无法正常连接TMDB
# 模板预设使用的网络代理为v2raya的http端口20171，如果使用了别的，请根据实际情况修改，总不会有人连魔法都不会用不？不会吧？不会吧？
# 部分参数不说明，如果想知道有什么用，可以参考其他的模板
# 权限均设置为root以保证访问不会出错，注释内容多多阅读
# 媒体库路径预设使用第一个存储池/volume1，请根据实际情况修改
# 媒体库，iyuu，cookiecloud使用bridge；其余统一使用host，需要改变端口就去修改变量，看注释说明
# iyuu使用host模式会占用mariadb/mysql的3306端口，所以使用bridge
# QB和TR使用host，只要宿主机拥有IPV6，即可连上IPV6传输数据，如果宿主机没有，请检查网络环境

# EMBY和JF在【控制台-高级】中生成【API密钥】，NT需要用
# PLEX需要注册登录生成登录密钥，用于登录使用，设置好后，浏览器F12->网络，从Plex请求URL中获取的X-Plex-Token，NT需要用

# QB 初始化账号为 admin，密码在日志中查看
# QB可选修改：用于传入连接的端口，随机生成一个，记得看站规；并且在路由器上做好端口映射，如果有公网的话
# QB关闭：启用 DHT (去中心化网络) 以找到更多用户
# QB关闭：启用用户交换 (PeX) 以找到更多用户
# QB关闭：启用本地用户发现以找到更多用户
# QB关闭：启用跨站请求伪造 (CSRF) 保护

# TR需要把汉化文件存放到对应目录，看注释说明
# TR不打开：启用随机端口，或使用固定端口。端口号设置好并且在路由器上做好端口映射，如果有公网的话
# TR关闭：启用本地用户发现(LPD)
# TR关闭：启用带宽管理(µTP)
# TR关闭：启用分布式哈希表(DHT)
# TR关闭：启用用户交换

# iyuu需要注册扫码获取token，初始化安装第一步只需要输入token即可

# cookiecloud使用教程：https://post.smzdm.com/p/a905kd5p

##############################################
# 镜像地址
# https://hub.docker.com/r/linuxserver/plex
# https://hub.docker.com/r/linuxserver/emby
# https://hub.docker.com/r/nyanmisaka/jellyfin
# https://hub.docker.com/r/linuxserver/qbittorrent
# https://hub.docker.com/r/linuxserver/transmission
# https://hub.docker.com/r/linyuan0213/nas-tools
# https://hub.docker.com/r/easychen/cookiecloud
# https://hub.docker.com/r/linuxserver/jackett
# https://hub.docker.com/r/linuxserver/prowlarr
# https://hub.docker.com/r/iyuucn/iyuuplus-dev
# https://hub.docker.com/r/mzz2017/v2raya
# https://hub.docker.com/r/containrrr/watchtower
# https://hub.docker.com/r/superng6/aria2

##############################################
# NT 文档
# https://github.com/linyuan0213/nas-tools
# 官方已经弃了，也无文档
# PT玩家看站规！！！PT玩家看站规！！！PT玩家看站规！！！

# iyuu 文档：https://doc.iyuu.cn/guide/getting-started

# 媒体库规范化命名手册（PEJ通用）：https://emby.media/support/articles/Home.html

# peerbanhelper 文档：https://github.com/PBH-BTN/PeerBanHelper

# aria2 文档：https://github.com/SuperNG6/docker-ariang
# aria2 教程：https://sleele.com/2019/09/27/docker-aria2的最佳实践

##############################################
# 各个服务的WebUI
# plex            ip:32400
# emby            ip:8096
# jellyfin        ip:8097
# qbittorrent     ip:8085
# transmission    ip:9091
# nastool         ip:22022
# cookiecloud     ip:8188
# peerbanhelper   ip:9898
# jackett         ip:9117
# prowlarr        ip:9696
# iyuu            ip:8780
# v2raya          ip:2017
  # sock 代理端口：20170
  # http 代理端口：20171
  # http 代理端口(带分流规则)：20172
# watchtower      不存在，后台自动更新容器镜像
# aria2           ip:5321
  # aria2-RPC     ip:6868

# 如果要使用peerbanhelper，QB和TR必须使用host网络模式，模板默认为host网络模式，且对QB和TR的版本号有要求，注意查看文档
# jellyfin 镜像地址，如果为arm64则使用：nyanmisaka/jellyfin:latest-rockchip

##############################################

---
version: "3"
# 最后编辑时间：2025-06-04
services:
##############################################
#                                            #
#         媒体库部分，全选/不选/选其一         #
#                                            #
##############################################

  plex:
    image: linuxserver/plex:latest
    container_name: plex
    hostname: plex
    # privileged: true
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ./plex:/config
      # 配置文件目录
      - /volume1:/data
      # - /volume2:/data2
      # 媒体库目录，可以自定义，可以写多个
    environment:
      - PLEX_CLAIM=【登录密钥】
      # 登录密钥，打开下面的地址，注册并登录后获取，如果对账号注册有洁癖，plex账号哪怕你买了pass通行证也可以注销
      # https://plex.tv/claim
      - PUID=0
      - PGID=0
      - TZ=Asia/Shanghai
      
      # 以下是为PLEX添加网络代理，自行准备好魔法，将IP改为NAS的IP，如需使用，去掉#号注释
      - NO_PROXY=172.17.0.1,127.0.0.1,localhost
      # 保持默认，不要改这一条
      - ALL_PROXY=http://172.17.0.1:20171
      - HTTP_PROXY=http://172.17.0.1:20171
      # 更换为自己的http代理
      # 如果 PLEX/EMBY/JF/NASTOOL/V2RAYA 都保持使用bridge，上面两条172.17.0.1保持不动
      # 如果不是，将 172.17.0.1 改为 你的NAS的IP
      # 切记设置好V2raya，如果你没有配置魔法就注释掉
      
    network_mode: bridge
    ports:
      - 32400:32400
    restart: unless-stopped

##############################################

  emby:
    image: linuxserver/emby:latest
    # 镜像地址，如需测试版追新，latest更改为beta，不区分设备架构
    # 如果使用开心版，将镜像改为 amilys/embyserver，arm64v8设备使用amilys/embyserver_arm64v8
    container_name: emby
    hostname: emby
    # privileged: true
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ./emby:/config
      # 配置文件目录
      - /volume1:/data
      # - /volume2:/data2
      # 媒体库目录，可以自定义，可以写多个
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      
      # 以下是为EMBY添加网络代理，自行准备好魔法，将IP改为NAS的IP，如需使用，去掉#号注释
      # emby推荐不写，而是安装神医插件：https://github.com/sjtuross/StrmAssistant
      - NO_PROXY=172.17.0.1,127.0.0.1,localhost
      # 保持默认，不要改这一条
      - ALL_PROXY=http://172.17.0.1:20171
      - HTTP_PROXY=http://172.17.0.1:20171
      # 更换为自己的http代理
      # 如果 PLEX/EMBY/JF/NASTOOL/V2RAYA 都保持使用bridge，上面两条172.17.0.1保持不动
      # 如果不是，将 172.17.0.1 改为 你的NAS的IP
      # 切记设置好V2raya，如果你没有配置魔法就注释掉
      
    network_mode: bridge
    ports:
      - 8096:8096
    restart: unless-stopped

##############################################

  jellyfin:
    image: nyanmisaka/jellyfin:latest
    # 镜像地址，无脑推荐使用ny大佬的JF，做好了全部修正优化，开箱即用  
    # x86设备默认用latest，arm64v8设备用latest-rockchip
    container_name: jellyfin
    hostname: jellyfin
    # privileged: true
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ./jellyfin/config:/config
      # 配置文件目录
      - /volume1:/media
      - /volume2:/media2
      # 媒体库目录，可以自定义，可以写多个
      - ./jellyfin/cache:/cache
      # 缓存目录
    environment:
      - TZ=Asia/Shanghai
      
      # 以下是为JF添加网络代理，自行准备好魔法，将IP改为NAS的IP，如需使用，去掉#号注释
      - NO_PROXY=172.17.0.1,127.0.0.1,localhost
      # 保持默认，不要改这一条
      - ALL_PROXY=http://172.17.0.1:20171
      - HTTP_PROXY=http://172.17.0.1:20171
      # 更换为自己的http代理
      # 如果 PLEX/EMBY/JF/NASTOOL/V2RAYA 都保持使用bridge，上面两条172.17.0.1保持不动
      # 如果不是，将 172.17.0.1 改为 你的NAS的IP
      # 切记设置好V2raya，如果你没有配置魔法就注释掉

    network_mode: bridge
    ports:
      - 8097:8096
    restart: unless-stopped

##############################################
#                                            #
#         下载器部分，全选/不选/选其一         #
#                                            #
##############################################

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    hostname: qbittorrent
    volumes:
      - ./qbittorrent:/config
      # 配置文件目录
      - /volume1/media/下载:/downloads
      # 默认下载目录
      - /volume1/media:/media
      # NT，QB，TR，ARIA2统一的下载目录，见上目录结构说明
      # 下载目录，可以自定义，可以写多个，这里如果你理解了映射是什么，就会明白是什么意思，如果不会，别写
      # - 【这里替换为你的数据存放目录】/Torrents监控自动下载目录:/watch
      # 种子监控自动下载目录，非必须，用于把种子放到目录内后，自动添加下载任务
    environment:
      - WEBUI_PORT=8085
      # 自定义WebUI端口
      - TORRENTING_PORT=25800
      # 自定义传输端口，别写6881，看站规！！！
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
    network_mode: host
    restart: unless-stopped

##############################################

  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    hostname: transmission
    volumes:
      - ./transmission:/config
      # 配置文件目录
      - /volume1/media/下载:/downloads
      # 默认下载目录
      - /volume1/media:/media
      # NT，QB，TR，ARIA2统一的下载目录，见上目录结构说明
      # - 【这里替换为你想映射到TR内的路径】:/【这里替换为你想映射到TR内的路径】
      # 下载目录，可以自定义，可以写多个，这里如果你理解了映射是什么，就会明白是什么意思，如果不会，别写
      # - 【这里替换为你的数据存放目录】/Torrents监控自动下载目录:/watch
      # 种子监控自动下载目录，非必须，用于把种子放到目录内后，自动添加下载任务
    environment:
      - TRANSMISSION_WEB_HOME=/config/webui
      # WEBUI主页路径，写容器路径，用于放汉化文件
      # 汉化文件下载地址：https://github.com/ronggang/transmission-web-control
      # 将 "/src" 这个文件夹里的东西放到 "/共享文件夹/docker/config/webui" 内即可
      - USER=ugreen
      - PASS=ugreen
      # TR账号密码，预设为ugreen，记住一定要修改密码，否则后果自负
      - PEERPORT=24680
      # 自定义peer传输端口
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
    network_mode: host
    # 如需修改WebUI的端口，到/config/setting.json中第54行的"rpc-port": 9091的端口改为自定义端口
    restart: unless-stopped

##############################################
#                                            #
#       自动化刮削整理工具，根据需要部署        #
#                                            #
##############################################

  nas-tools:
    image: linyuan0213/nas-tools:latest
    container_name: nas-tools
    hostname: nas-tools
    # privileged: true
    # 特权模式，赋予容器几乎与主机相同的权限
    volumes:
      - ./nas-tools:/config
      # 配置文件目录
      - ./nas-tools/backups:/backups
      # NASTOOL数据和配置的备份文件夹
      - /volume1/media:/media
      # NT，QB，TR，ARIA2统一的下载目录，见上目录结构说明
      # - 【这里替换为你想映射到NST内的路径】:/【NST内显示的目录的名字】
      # 可以自定义多个，容器和路径均可一样，建议映射一个较为最上级的路径作为总目录
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - NASTOOL_AUTO_UPDATE=false
      # 不推荐自动更新
    network_mode: bridge
    # network_mode: host
    # 推荐使用bridge模式，3000有别的docker镜像要用，也可以使用host模式，设置内可以修改容器端口
    # host模式需要容器内的端口不被占用，不需要端口映射，后续端口映射全都开头加#注释掉，否则注释掉这条
    ports:
      - 22022:3000/tcp
      # WebUI http端口
    restart: unless-stopped

##############################################
#                                            #
#          其他辅助工具，根据需要部署          #
#                                            #
##############################################

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    hostname: watchtower
    network_mode: host
    # 并不存在端口，只是减少新增网络
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # docker核心
    environment:
      - WATCHTOWER_CLEANUP=true
      # 更新后移除旧的镜像
      - TZ=Asia/Shanghai
    restart: unless-stopped

##############################################

  cookiecloud:
    image: easychen/cookiecloud:latest
    container_name: cookiecloud
    hostname: cookiecloud
    network_mode: bridge
    ports:
      - 8188:8088/tcp
      # WebUI 端口，可能会有别的服务使用8088，所以改用bridge
    restart: unless-stopped

##############################################

  peerbanhelper:
    image: ghostchu/peerbanhelper:latest
    container_name: peerbanhelper
    hostname: peerbanhelper
    stop_grace_period: 30s
    volumes:
      - ./peerbanhelper:/app/data
      # 配置文件目录
      - ./peerbanhelper/tmp:/tmp
      # 临时缓存目录
    network_mode: host
    restart: unless-stopped
    
##############################################

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    hostname: jackett
    volumes:
      - ./jackett:/config
      # 配置文件目录
      # - 【这里替换为你的bt文件存放目录】:/downloads
      # 种子目录，没啥用，放着
    environment:
      - PUID=1000
      - PGID=100
      - UMASK=022
      - TZ=Asia/Shanghai
    network_mode: host
    restart: unless-stopped

##############################################

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    volumes:
      - ./prowlarr:/config
      # 配置文件目录
    environment:
      - PUID=1000
      - PGID=100
      - UMASK=022
      - TZ=Asia/Shanghai
    network_mode: host
    restart: unless-stopped

##############################################

  iyuuplus:
    image: iyuucn/iyuuplus-dev:latest
    container_name: iyuuplus
    hostname: iyuuplus
    volumes:
      - ./iyuuplus/iyuu:/iyuu
      # 配置文件目录，存放源码
      - ./iyuuplus/data:/data
      # 数据库目录，存放mysql数据库
    network_mode: bridge
    ports:
      - 8780:8780
      # 注：8780是容器内nginx的监听端口，反向代理了 8787、3131
    restart: unless-stopped

##############################################

  v2raya:
    image: mzz2017/v2raya:latest
    container_name: v2raya
    hostname: v2raya
    environment:
      - V2RAYA_LOG_FILE=/tmp/v2raya.log
      - V2RAYA_V2RAY_BIN=/usr/local/bin/v2ray
    volumes:
      - ./v2raya:/etc/v2raya
      # 配置文件目录
      - /etc/resolv.conf:/etc/resolv.conf
      # 照抄，踩点了，有该文件存在
    network_mode: bridge
    # 由于书写有不同方式，这里统一采用bridge，使用不支持透明代理的模板，如果你清楚如何使用，则自行修改
      # 你直接写 172.17.0.1:[201710-20172] 进行访问，例如 emby/JF 变量中的网络代理参数
        # 如果 PLEX/EMBY/JF/NASTOOL/V2RAYA 都保持使用bridge，上面两条172.17.0.1保持不动
        # 如果不是，将 172.17.0.1 改为 你的NAS的IP
    ports:
      - 2017:2017/tcp
      # WebUI 端口：2017
      - 20170-20172:20170-20172/tcp
      # sock 代理端口：20170
      # http 代理端口：20171
      # http 代理端口(带分流规则)：20172
    restart: unless-stopped

##############################################

  aria2:
    image: superng6/aria2:latest
    container_name: aria2
    hostname: aria2
    volumes:
      - ./aria2/config:/config
      # 配置文件目录
      # - ./aria2/www:/www
      # WebUI页面，不推荐使用
      # 如果映射了，WebUI会显示异常，需要先把这个路径注释掉，在dpanel内找到容器内部路径，将内部路径的 index.html 提取到你要映射出来的路径内，再删掉#注释，重新部署一次
      - /volume1/media:/downloads
      # 默认下载目录，这是例子，请根据实际情况修改
      - /volume1/media:/media
      # NT，QB，TR，ARIA2统一的下载目录，见上目录结构说明
    environment:
      - WEBUI_PORT=5321
      # 自定义 WebUI 端口
      - BTPORT=32516
      # 自定义 DHT和BT监听端口
      - PORT=6868
      # 自定义 RPC通讯端口（与宿主主机的端口映射一致）
      - SECRET=ugreen
      # 设置RPC密钥，用于AriaNg与Aria2的通讯验证使用，预设为ugreen，记得修改
      - CACHE=1024M
      # Aria2磁盘缓存配置
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=Asia/Shanghai
      - UT=true
      # 启动容器时更新trackers
      - CUT=true
      # 启动容器时更新自定义trackes地址
      - RUT=true
      # 每天凌晨3点更新trackers
      - SMD=true
      # 保存磁力链接为种子文件
    network_mode: host
    # ports:
      # - 5321:5321/tcp
      # WebUI 端口
      # - 6800:6800/tcp
      # RPC 通讯端口映射
      # - 32516:32516/tcp
      # - 32516:32516/udp
      # 下载传输端口
    restart: unless-stopped
