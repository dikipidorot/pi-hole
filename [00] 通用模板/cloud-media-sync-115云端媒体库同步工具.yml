# 官方文档
# https://wiki.cmscc.cc
# https://github.com/guyue2005/CMSHelp
# https://hub.docker.com/r/imaliang/cloud-media-sync
# https://wiki.cmscc.cc/install
# https://t.me/+v08KwCO7jH0xNjZl


# 如果你熟悉emby2Alist，可以创建 config/constant.js 进行高级配置，优先级高于 EMBY_HOST_PORT、EMBY_API_KEY、IMAGE_CACHE_POLICY，小白请忽略
# 跑起来以后，访问 http://127.0.0.1:9527⁠ 进行 核心配置，扫码登录115，完成strm配置
# 配置全量同步参数，并执行全量同步
# 如果你的媒体库不在一个文件夹里，就执行多次全量同步，一定要第一个文件夹同步完成后再执行下一个
# 一个文件夹只需要执行全量同步成功一次即可
# 建议先测试一个小库，彻底搞懂怎么玩后再同步大库
# 全量同步完后，之后关于你同步的文件夹里的变动由增量同步完成
# 由于增量同步依赖115生活事件，所以无法同步文件重命名，不过文件重命名后并不影响直连的获取，所以影响不大。

# 功能图解
# https://wiki.cmscc.cc/flow
# 教程扩展
# https://wiki.cmscc.cc/docs/extend

# emby入库通知
# URL: http://172.17.0.1:9527/api/emby/webhook?token=cloud_media_sync⁠
# 请求内容类型: application/json
# Events: 勾选媒体添加、删除

# 自动整理
# https://wiki.cmscc.cc/docs/auto-organize

# 115分享同步
# https://wiki.cmscc.cc/docs/share-sync

# 媒体库封面自动生成插件
# https://wiki.cmscc.cc/docs/cover

# tmdb代理
# https://wiki.cmscc.cc/docs/tmdb

---
version: "3"
# 最后编辑时间：2025-06-03
services:
  cloud-media-sync:
    image: imaliang/cloud-media-sync:latest
    # 镜像地址
    container_name: cloud-media-sync
    # 容器名字
    hostname: cloud-media-sync
    # 主机名
    privileged: true
    # 特权模式，赋予容器几乎与主机相同的权限
    volumes:
      - 【这里替换为你的docker数据存放目录】/cloud-media-sync/config:/config
      # 配置文件目录
      - 【这里替换为你的docker数据存放目录】/cloud-media-sync/logs:/logs
      # 日志文件目录
      - 【这里替换为你的docker数据存放目录】/cloud-media-sync/cache:/var/cache/nginx/emby
      # 缓存文件目录
      - 【这里替换为你的媒体库目录】/cloud-media-sync:/media
      # 生成strm文件所在地，放到你的媒体库中进行扫库刮削
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
      # 默认创建新文件的权限，一般写022
      - TZ=Asia/Shanghai
      # 时区
      - RUN_ENV=online
      # 使用在线的 .env 环境文件，照抄，不管

      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin
      # 自定义账号密码
      - CMS_API_TOKEN=cloud_media_sync
      # 自定义CMS的API密钥
      - DONATE_CODE=CMS_XXX_XXX、
      # CMS 捐赠码，捐赠后私聊机器人 @cms_ticket_bot 获得

      - EMBY_HOST_PORT=http://172.17.0.1:8096
      # EMBY 地址
      - EMBY_API_KEY=
      # EMBY 的 API token

      - IMAGE_CACHE_POLICY=3
      # EMBY 图片缓存策略，包括主页、详情页、图片库的原图，对应的值如下
      # 0: 不同尺寸设备共用一份缓存，先访问先缓存，空间占用最小但存在小屏先缓存大屏看的图片模糊问题
      # 1: 不同尺寸设备分开缓存，空间占用适中，命中率低下，但契合 emby 的图片缩放处理
      # 2: 不同尺寸设备共用一份缓存，空间占用最大，移除 emby 的缩放参数，直接原图高清显示
      # 3: 关闭 nginx 缓存功能，已缓存文件不做处理

    # network_mode: bridge
    network_mode: host
    # host模式需要容器内的端口不被占用，不需要端口映射，后续端口映射全都开头加#注释掉，否则注释掉这条
    # ports:
      # - 9527:9527/tcp
      # cms 的 WebUI 端口
      # - 9096:9096/tcp
      # emby302 的 WebUI 端口

    restart: unless-stopped
    # 重启策略，可根据实际情况而选择 no/always/unless-stopped/on-failure/on-failure:3
    labels:
      icon: http://IP:PORT/i/user_01/cloud-media-sync_A.png
      # 适用于CasaOS导入时自动写上图标地址
      # 注意：在导入CasaOS时，记得补全本机端口号
      # 注意：图标地址仅供参考，请根据实际填写，推荐自搭建兰空图床使用
      ########################################
      net.unraid.docker.managed: dockerman
      net.unraid.docker.webui: http://[IP]:[PORT:9527]
      # 适用于unraid界面打开WebUI，注意端口号写的是容器端口，如有自定义，自行修改
      net.unraid.docker.icon: /mnt/user/LOGO/cloud-media-sync.png
      # 适用于unraid的图标，可以写unRAID的路径地址，也可以写一个图标地址(局域网或广域网均可)
      # 注意：通过compose创建的docker容器，无法在unRAID上进行编辑
