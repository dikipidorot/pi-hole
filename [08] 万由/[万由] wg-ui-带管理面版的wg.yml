# 官方文档
# https://github.com/ngoduykhanh/wireguard-ui
# https://hub.docker.com/r/ngoduykhanh/wireguard-ui

# 教程
# https://songxwn.com/WireGuard-UI-install
# https://gythialy.github.io/deploy-wireguard-with-ui-by-docker

---
version: "3"
# 最后编辑时间：2024-11-19
services:
   wg-ui:
    image: ngoduykhanh/wireguard-ui:latest
    # 镜像地址
    container_name: wg-ui
    # 容器名字
    hostname:  wg-ui
    # 主机名
    cap_add:
      - NET_ADMIN
    # 照抄
    logging:
      driver: json-file
      options:
        max-size: 50m
    # 日志文件设置
    volumes:
      - /mnt/unas/data/docker/wg-ui:/etc/wireguard
      # 配置文件目录
      - /mnt/unas/data/docker/wg-ui/db:/app/db
      # 数据库目录
    environment:
      - BIND_ADDRESS=0.0.0.0:5000
      # 自定义IP和端口，默认为0.0.0.0:5000
      # 群晖用户的WebUI端口默认为5000，建议修改
      - WGUI_SERVER_INTERFACE_ADDRESSES=10.252.1.0/24
      # 自定义WG组网的网段，默认为10.252.1.0/24，可在设置中自定义
      - WGUI_SERVER_LISTEN_PORT=51820
      # 自定义数据传输端口，默认为51820，可在设置中自定义容器端口
      - WGUI_DNS=8.8.8.8,223.6.6.6
      # 客户端的DNS服务器，默认为1.1.1.1，可在设置中自定义，可以写多个
      - WGUI_MTU=1450
      # 接口MTU配置，默认为1450，可在设置中自定义
      - WGUI_USERNAME=cheems
      - WGUI_PASSWORD=cheems
      # WGUI的管理员账号密码，预设为cheems，记得修改
      - TZ=Asia/Shanghai
      # 时区
    # network_mode: bridge
    network_mode: host
    # host模式需要容器内的端口不被占用，不需要端口映射，后续端口映射全都开头加#注释掉，否则注释掉这条
    # ports:
      # - 5000:5000/tcp
      # WebUI 端口，注意和变量设置的容器端口保持一致
      # - 51820:51820/udp
      # 数据传输端口
    restart: unless-stopped
    # 重启策略，可根据实际情况而选择 no/always/unless-stopped/on-failure/on-failure:3
